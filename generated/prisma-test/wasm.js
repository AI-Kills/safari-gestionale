
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password'
};

exports.Prisma.DestinazioneScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.BancaScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cognome: 'cognome',
  tel: 'tel',
  indirizzo: 'indirizzo',
  cap: 'cap',
  citta: 'citta',
  cf: 'cf',
  email: 'email',
  tipo: 'tipo',
  provenienza: 'provenienza',
  collegato: 'collegato',
  note: 'note',
  data_di_nascita: 'data_di_nascita',
  luogo_nascita: 'luogo_nascita',
  provincia_nascita: 'provincia_nascita',
  numero_passaporto: 'numero_passaporto',
  data_scadenza_passaporto: 'data_scadenza_passaporto',
  nazionalita: 'nazionalita',
  provincia: 'provincia',
  sesso: 'sesso'
};

exports.Prisma.FornitoreScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  valuta: 'valuta'
};

exports.Prisma.PreventivoScalarFieldEnum = {
  id: 'id',
  id_cliente: 'id_cliente',
  percentuale_ricarico: 'percentuale_ricarico',
  note: 'note',
  brand: 'brand',
  adulti: 'adulti',
  bambini: 'bambini',
  destinazione: 'destinazione',
  tipo_viaggio: 'tipo_viaggio',
  note_operative: 'note_operative',
  riferimento: 'riferimento',
  data_partenza: 'data_partenza',
  operatore: 'operatore',
  feedback: 'feedback',
  stato: 'stato',
  data: 'data',
  numero_preventivo: 'numero_preventivo'
};

exports.Prisma.ServiziATerraScalarFieldEnum = {
  id: 'id',
  id_preventivo: 'id_preventivo',
  id_fornitore: 'id_fornitore',
  id_destinazione: 'id_destinazione',
  descrizione: 'descrizione',
  data: 'data',
  numero_notti: 'numero_notti',
  numero_camere: 'numero_camere',
  totale: 'totale',
  valuta: 'valuta',
  cambio: 'cambio',
  ricarico: 'ricarico',
  servizio_aggiuntivo: 'servizio_aggiuntivo'
};

exports.Prisma.VoloScalarFieldEnum = {
  id: 'id',
  id_preventivo: 'id_preventivo',
  id_fornitore: 'id_fornitore',
  compagnia_aerea: 'compagnia_aerea',
  descrizione: 'descrizione',
  data_partenza: 'data_partenza',
  data_arrivo: 'data_arrivo',
  totale: 'totale',
  ricarico: 'ricarico',
  numero: 'numero',
  valuta: 'valuta',
  cambio: 'cambio'
};

exports.Prisma.AssicurazioneScalarFieldEnum = {
  id: 'id',
  id_preventivo: 'id_preventivo',
  id_fornitore: 'id_fornitore',
  assicurazione: 'assicurazione',
  netto: 'netto',
  ricarico: 'ricarico',
  numero: 'numero'
};

exports.Prisma.PreventivoAlClienteScalarFieldEnum = {
  id: 'id',
  id_preventivo: 'id_preventivo',
  descrizione_viaggio: 'descrizione_viaggio'
};

exports.Prisma.PreventivoAlClienteRowScalarFieldEnum = {
  id: 'id',
  id_preventivo_al_cliente: 'id_preventivo_al_cliente',
  senza_assicurazione: 'senza_assicurazione',
  destinazione: 'destinazione',
  descrizione: 'descrizione',
  individuale: 'individuale',
  numero: 'numero',
  is_primo_tipo: 'is_primo_tipo'
};

exports.Prisma.Blog_article_commentsScalarFieldEnum = {
  id: 'id',
  article_id: 'article_id',
  user_id: 'user_id',
  content: 'content',
  date_created: 'date_created'
};

exports.Prisma.Blog_articles_aiScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  date_created: 'date_created'
};

exports.Prisma.CustomersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  image_url: 'image_url'
};

exports.Prisma.Incassi_partecipantiScalarFieldEnum = {
  id: 'id',
  id_partecipante: 'id_partecipante',
  id_banca: 'id_banca',
  importo: 'importo',
  data_scadenza: 'data_scadenza',
  data_incasso: 'data_incasso'
};

exports.Prisma.InvoicesScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  amount: 'amount',
  status: 'status',
  date: 'date'
};

exports.Prisma.Pagamenti_assicurazioniScalarFieldEnum = {
  id: 'id',
  id_assicurazione: 'id_assicurazione',
  id_banca: 'id_banca',
  importo: 'importo',
  data_scadenza: 'data_scadenza',
  data_incasso: 'data_incasso'
};

exports.Prisma.Pagamenti_servizi_a_terraScalarFieldEnum = {
  id: 'id',
  id_servizio_a_terra: 'id_servizio_a_terra',
  id_banca: 'id_banca',
  importo: 'importo',
  data_scadenza: 'data_scadenza',
  data_incasso: 'data_incasso'
};

exports.Prisma.Pagamenti_voliScalarFieldEnum = {
  id: 'id',
  id_volo: 'id_volo',
  id_banca: 'id_banca',
  importo: 'importo',
  data_scadenza: 'data_scadenza',
  data_incasso: 'data_incasso'
};

exports.Prisma.PartecipantiScalarFieldEnum = {
  id: 'id',
  id_preventivo: 'id_preventivo',
  nome: 'nome',
  cognome: 'cognome',
  tot_quota: 'tot_quota'
};

exports.Prisma.PraticheScalarFieldEnum = {
  id: 'id',
  id_preventivo: 'id_preventivo',
  id_cliente: 'id_cliente',
  data_conferma: 'data_conferma',
  data_partenza: 'data_partenza',
  data_rientro: 'data_rientro',
  note: 'note',
  numero_passeggeri: 'numero_passeggeri',
  totale: 'totale'
};

exports.Prisma.Preventivi_mostrare_clientiScalarFieldEnum = {
  id: 'id',
  id_preventivo: 'id_preventivo',
  id_destinazione: 'id_destinazione',
  descrizione: 'descrizione',
  tipo: 'tipo',
  costo_individuale: 'costo_individuale',
  importo_vendita: 'importo_vendita',
  totale: 'totale'
};

exports.Prisma.RevenueScalarFieldEnum = {
  month: 'month',
  revenue: 'revenue'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Destinazione: 'Destinazione',
  Banca: 'Banca',
  Cliente: 'Cliente',
  Fornitore: 'Fornitore',
  Preventivo: 'Preventivo',
  ServiziATerra: 'ServiziATerra',
  Volo: 'Volo',
  Assicurazione: 'Assicurazione',
  PreventivoAlCliente: 'PreventivoAlCliente',
  PreventivoAlClienteRow: 'PreventivoAlClienteRow',
  blog_article_comments: 'blog_article_comments',
  blog_articles_ai: 'blog_articles_ai',
  customers: 'customers',
  incassi_partecipanti: 'incassi_partecipanti',
  invoices: 'invoices',
  pagamenti_assicurazioni: 'pagamenti_assicurazioni',
  pagamenti_servizi_a_terra: 'pagamenti_servizi_a_terra',
  pagamenti_voli: 'pagamenti_voli',
  partecipanti: 'partecipanti',
  pratiche: 'pratiche',
  preventivi_mostrare_clienti: 'preventivi_mostrare_clienti',
  revenue: 'revenue'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
